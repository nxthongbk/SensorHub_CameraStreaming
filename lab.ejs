<html>
<link href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.4/css/bootstrap.min.css" rel="stylesheet" id="bootstrap-css">
<link href="https://fonts.googleapis.com/css?family=Comfortaa" rel="stylesheet" id="bootstrap-css">
<link rel="icon" href="/images/tma.png">
<link href="/styles/lab.css" rel="stylesheet">

<head>
  <title>TMA Lab Monitoring</title>
  <meta name="charset" content="uft-8">
  <script src="https://code.jquery.com/jquery-2.2.4.min.js"></script>
  <script src="https://code.highcharts.com/highcharts.js"></script>
  <script src="https://code.highcharts.com/modules/exporting.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/2.3.0/socket.io.js"></script>

  <meta charset="utf-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="description" content="A front-end template that helps you build fast, modern mobile web apps.">
  <meta name="viewport" content="width=device-width, initial-scale=1.0, minimum-scale=1.0">
  <meta name="mobile-web-app-capable" content="yes">
  <meta name="apple-mobile-web-app-capable" content="yes">
  <meta name="apple-mobile-web-app-status-bar-style" content="black">
  <meta name="apple-mobile-web-app-title" content="Material Design Lite">

  <link rel="stylesheet"
    href="https://fonts.googleapis.com/css?family=Roboto:regular,bold,italic,thin,light,bolditalic,black,medium&lang=en">
  <link rel="stylesheet" href="https://fonts.googleapis.com/icon?family=Material+Icons">
  <link rel="stylesheet" href="https://code.getmdl.io/1.3.0/material.cyan-light_blue.min.css">

  <script>
    var data = "";
  </script>

  <script type="text/javascript">
    $(function () {

      var socket = io('https://sensorhub.tech', { path: "/socket.io" });
      var series;
      Highcharts.setOptions({
        global: {
          useUTC: false
        },
        lang: {
          thousandsSep: ','
        }
      });

      chart = new Highcharts.Chart({
        chart: {
          renderTo: 'container',
          type: 'spline',
          animation: Highcharts.svg, // don't animate in old IE
          marginRight: 10,
        },
        title: {
          text: ''
        },
        xAxis: {
          type: 'datetime',
          tickPixelInterval: 360,
          title: {
            text: 'Time',
            style: {
              fontWeight: 'bold'
            }
          }
        },
        yAxis: {
          title: {
            text: 'Temperature',
            style: {
              fontWeight: 'bold'
            }
          },
          plotLines: [{
            value: 0,
            width: 1,
            color: '#808080'
          }]
        },
        tooltip: {
          formatter: function () {
            return '<b>' + this.series.name + '</b><br/>' +
              Highcharts.dateFormat('%Y-%m-%d %H:%M:%S', this.x) + '<br/>' + Highcharts.numberFormat(this.y, 2);
          }
        },
        legend: {
          enabled: true
        },
        exporting: {
          enabled: true
        },
        series: [
          {
            name: 'Zone1',
            color: 'blue',
            data: (function () {
              // generate an array of random data
              var json = '<%- environment %>',
                data_temp = JSON.parse(json);
              var data = [],
                time = (new Date()).getTime(),
                i;
              for (i = -59; i <= 0; i += 1) {
                if (data_temp[Math.abs(i)].device_id == "1") {
                  data.push({
                    x: time + i * 60000,
                    y: parseFloat(data_temp[Math.abs(i)].temp)
                  });

                }
                // data.push({
                //   x: time + i * 60000,
                //   y: parseFloat(data_temp[Math.abs(i)].temp)
                // });
              }
              return data;
            }())
          },
          {
            name: 'Zone2',
            color: 'green',
            data: (function () {
              // generate an array of random data
              var json = '<%- environment %>',
                data_temp = JSON.parse(json);
              var data = [],
                time = (new Date()).getTime(),
                i;
              for (i = -59; i <= 0; i += 1) {
                if (data_temp[Math.abs(i)].device_id == '2') {
                  data.push({
                    x: time + i * 60000,
                    y: parseFloat(data_temp[Math.abs(i)].temp)
                  });
                }

              }
              return data;
            }())
          },
          {
            name: 'Zone3',
            color: 'yellow',
            data: (function () {
              // generate an array of random data
              var json = '<%- environment %>',
                data_temp = JSON.parse(json);
              var data = [],
                time = (new Date()).getTime(),
                i;
              for (i = -59; i <= 0; i += 1) {
                if (data_temp[Math.abs(i)].device_id == '3') {
                  data.push({
                    x: time + i * 60000,
                    y: parseFloat(data_temp[Math.abs(i)].temp)
                  });
                }
              }
              return data;
            }())
          },
          {
            name: 'Zone4',
            color: 'orange',
            data: (function () {
              // generate an array of random data
              var json = '<%- environment %>',
                data_temp = JSON.parse(json);
              var data = [],
                time = (new Date()).getTime(),
                i;
              for (i = -59; i <= 0; i += 1) {
                if (data_temp[Math.abs(i)].device_id == '4') {
                  data.push({
                    x: time + i * 60000,
                    y: parseFloat(data_temp[Math.abs(i)].temp)
                  });
                }
              }
              return data;
            }())
          },
          {
            name: 'Zone5',
            color: 'pink',
            data: (function () {
              // generate an array of random data
              var json = '<%- environment %>',
                data_temp = JSON.parse(json);
              var data = [],
                time = (new Date()).getTime(),
                i;
              for (i = -59; i <= 0; i += 1) {
                if (data_temp[Math.abs(i)].device_id == '5') {
                  data.push({
                    x: time + i * 60000,
                    y: parseFloat(data_temp[Math.abs(i)].temp)
                  });
                }
              }
              return data;
            }())
          },
          {
            name: 'Zone6',
            color: 'purple',
            data: (function () {
              // generate an array of random data
              var json = '<%- environment %>',
                data_temp = JSON.parse(json);
              var data = [],
                time = (new Date()).getTime(),
                i;
              for (i = -59; i <= 0; i += 1) {
                if (data_temp[Math.abs(i)].device_id == '6') {
                  data.push({
                    x: time + i * 60000,
                    y: parseFloat(data_temp[Math.abs(i)].temp)
                  });
                }
              }
              return data;
            }())
          },
          {
            name: 'Zone7',
            color: 'brown',
            data: (function () {
              // generate an array of random data
              var json = '<%- environment %>',
                data_temp = JSON.parse(json);
              var data = [],
                time = (new Date()).getTime(),
                i;
              for (i = -59; i <= 0; i += 1) {
                if (data_temp[Math.abs(i)].device_id == '7') {
                  data.push({
                    x: time + i * 60000,
                    y: parseFloat(data_temp[Math.abs(i)].temp)
                  });
                }
              }
              return data;
            }())
          },
          {
            name: 'Zone8',
            color: 'gray',
            data: (function () {
              // generate an array of random data
              var json = '<%- environment %>',
                data_temp = JSON.parse(json);
              var data = [],
                time = (new Date()).getTime(),
                i;
              for (i = -59; i <= 0; i += 1) {
                if (data_temp[Math.abs(i)].device_id == '8') {
                  data.push({
                    x: time + i * 60000,
                    y: parseFloat(data_temp[Math.abs(i)].temp)
                  });
                }
              }
              return data;
            }())
          },
          {
            name: 'Threshold',
            color: 'red',
            data: (function () {
              // generate an array of random data
              var json = '<%- environment %>',
                data_temp = JSON.parse(json);

              var en = '<%- JSON.stringify(device) %>';
              var threshold = JSON.parse(en)[0].threshold;



              var data = [],
                time = (new Date()).getTime(),
                i;
              for (i = -59; i <= 0; i += 1) {
                if (data_temp[Math.abs(i)].device_id == '1') {
                  data.push({
                    x: time + i * 60000,
                    y: parseFloat(threshold)
                  });
                }
              }
              return data;
            }())
          },

        ]
      });


      //For Update tempeterature
      socket.on('lab_monitor', function (data) {

        var lab = '<%- lab %>';
        var en = '<%- JSON.stringify(device) %>';
        var threshold = JSON.parse(en)[0].threshold;


        if (typeof (data) !== "object") {
          data = JSON.parse(data);
        }
        var current_lab = data.lab_id;

        if (lab == current_lab) {

          //  $('#temperature').text(data.temp + "°C");
          //  $('#humidity').text(data.humidity + "%");
          //  $('#pressure').text(Math.round(data.pressure) + "%");
          //con
          //document.getElementById('path_temp').getAttribute('50 100')
          if (data.device_id == "1") {
            $('#temperature_1').text(data.temp + "°C");
            const path_temp_1 = document.querySelector('#path_temp_1');
            path_temp_1.style.setProperty('stroke-dasharray', data.temp + ' 100');
            chart.series[0].addPoint([(new Date()).getTime(), parseFloat(data.temp)], true, true);
            chart.series[8].addPoint([(new Date()).getTime(), parseFloat(threshold)], true, true);
          }
          else if (data.device_id == "2") {
            $('#temperature_2').text(data.temp + "°C");
            const path_temp_2 = document.querySelector('#path_temp_2');
            path_temp_2.style.setProperty('stroke-dasharray', data.temp + ' 100');
            chart.series[1].addPoint([(new Date()).getTime(), parseFloat(data.temp)], true, true);
          }
          else if (data.device_id == "3") {
            $('#temperature_3').text(data.temp + "°C");
            const path_temp_3 = document.querySelector('#path_temp_3');
            path_temp_3.style.setProperty('stroke-dasharray', data.temp + ' 100');
            chart.series[2].addPoint([(new Date()).getTime(), parseFloat(data.temp)], true, true);
          }
          else if (data.device_id == "4") {
            $('#temperature_4').text(data.temp + "°C");
            const path_temp_4 = document.querySelector('#path_temp_4');
            path_temp_4.style.setProperty('stroke-dasharray', data.temp + ' 100');
            chart.series[3].addPoint([(new Date()).getTime(), parseFloat(data.temp)], true, true);
          }
          else if (data.device_id == "5") {
            $('#temperature_5').text(data.temp + "°C");
            const path_temp_5 = document.querySelector('#path_temp_5');
            path_temp_5.style.setProperty('stroke-dasharray', data.temp + ' 100');
            chart.series[4].addPoint([(new Date()).getTime(), parseFloat(data.temp)], true, true);
          }
          else if (data.device_id == "6") {
            $('#temperature_6').text(data.temp + "°C");
            const path_temp_6 = document.querySelector('#path_temp_6');
            path_temp_6.style.setProperty('stroke-dasharray', data.temp + ' 100');
            chart.series[5].addPoint([(new Date()).getTime(), parseFloat(data.temp)], true, true);
          }
          else if (data.device_id == "7") {
            $('#temperature_7').text(data.temp + "°C");
            const path_temp_7 = document.querySelector('#path_temp_7');
            path_temp_7.style.setProperty('stroke-dasharray', data.temp + ' 100');
            chart.series[6].addPoint([(new Date()).getTime(), parseFloat(data.temp)], true, true);
          }
          else if (data.device_id == "8") {
            $('#temperature_8').text(data.temp + "°C");
            const path_temp_8 = document.querySelector('#path_temp_8');
            path_temp_8.style.setProperty('stroke-dasharray', data.temp + ' 100');
            chart.series[7].addPoint([(new Date()).getTime(), parseFloat(data.temp)], true, true);
          }

          //const path_humidity = document.querySelector('#path_humidity');
          // path_humidity.style.setProperty('stroke-dasharray', data.humidity + ' 100');

          //const path_pressure = document.querySelector('#path_pressure');
          // path_pressure.style.setProperty('stroke-dasharray', data.pressure + ' 100');

          // console.log("====================");
          console.log(data);
          // console.log("--------------------")
          // chart.series[0].addPoint([(new Date()).getTime(), parseFloat(data.temp)], true, true);
          // chart.series[0].addPoint([(new Date()).getTime(), parseFloat(data.temp)], true, true);

          chart.redraw();
        }
        // document.getElementById('temperature').textContent = data.temp;

      });


    });


  </script>
</head>

<body>
  <div class="demo-layout mdl-layout mdl-js-layout mdl-layout--fixed-drawer mdl-layout--fixed-header">
    <header class="demo-header mdl-layout__header mdl-color--grey-100 mdl-color-text--grey-600">
      <div class="mdl-layout__header-row">
        <span class="mdl-layout-title">Home</span>
        <div class="mdl-layout-spacer"></div>
        <div class="mdl-textfield mdl-js-textfield mdl-textfield--expandable">
          <label class="mdl-button mdl-js-button mdl-button--icon" for="search">
            <i class="material-icons">search</i>
          </label>
          <div class="mdl-textfield__expandable-holder">
            <input class="mdl-textfield__input" type="text" id="search">
            <label class="mdl-textfield__label" for="search">Enter your query...</label>
          </div>
        </div>
        <button class="mdl-button mdl-js-button mdl-js-ripple-effect mdl-button--icon" id="hdrbtn">
          <i class="material-icons">more_vert</i>
        </button>
        <ul class="mdl-menu mdl-js-menu mdl-js-ripple-effect mdl-menu--bottom-right" for="hdrbtn">
          <li class="mdl-menu__item">About</li>
          <li class="mdl-menu__item">Contact</li>
          <li class="mdl-menu__item">Legal information</li>
        </ul>
      </div>
    </header>
    <div class="demo-drawer mdl-layout__drawer mdl-color--blue-grey-900 mdl-color-text--blue-grey-50">
      <header class="demo-drawer-header">
        <img src="/images/tma.png" class="demo-avatar">
        <div class="demo-avatar-dropdown">
          <span>admin@tma.com.vn</span>
          <div class="mdl-layout-spacer"></div>
          <button id="accbtn" class="mdl-button mdl-js-button mdl-js-ripple-effect mdl-button--icon">
            <i class="material-icons" role="presentation">arrow_drop_down</i>
            <span class="visuallyhidden">Accounts</span>
          </button>
          <ul class="mdl-menu mdl-menu--bottom-right mdl-js-menu mdl-js-ripple-effect" for="accbtn">
            <li class="mdl-menu__item">avaya@tma.com.vn</li>
            <li class="mdl-menu__item"><i class="material-icons">add</i>Add another account...</li>
          </ul>
        </div>
      </header>
      <nav class="demo-navigation mdl-navigation mdl-color--blue-grey-800">
        <a class="mdl-navigation__link" href="/lab_monitor"><i class="mdl-color-text--blue-grey-400 material-icons"
            role="presentation">business</i>Lab Monitor</a>
        <a class="mdl-navigation__link" href="/labs/<%- lab %>"><i class="mdl-color-text--blue-grey-400 material-icons"
            role="presentation">home</i>Home</a>
        <a class="mdl-navigation__link" href="/setting/<%- lab %>"><i
            class="mdl-color-text--blue-grey-400 material-icons"
            role="presentation">settings_applications</i>Setting</a>
        <a class="mdl-navigation__link" href="/camera/<%- lab %>"><i
            class="mdl-color-text--blue-grey-400 material-icons" role="presentation">camera_alt</i>Camera</a>
        <a class="mdl-navigation__link" href="/prediction/<%- lab %>"><i
            class="mdl-color-text--blue-grey-400 material-icons"
            role="presentation">insert_chart_outlined</i>Prediction</a>
        <a class="mdl-navigation__link" href="/humidity/<%- lab %>"><i
            class="mdl-color-text--blue-grey-400 material-icons" role="presentation">ac_unit</i>Humidity</a>
        <a class="mdl-navigation__link" href="/battery/<%- lab %>"><i
            class="mdl-color-text--blue-grey-400 material-icons" role="presentation">flag</i>Battery</a>
        <a class="mdl-navigation__link" href="/location/<%- lab %>"><i
            class="mdl-color-text--blue-grey-400 material-icons" role="presentation">local_offer</i>Location</a>
        <a class="mdl-navigation__link" href="/history/<%- lab %>"><i
            class="mdl-color-text--blue-grey-400 material-icons" role="presentation">calendar_today</i>History</a>
        <a class="mdl-navigation__link" href="/user>"><i class="mdl-color-text--blue-grey-400 material-icons"
            role="presentation">people</i>User</a>
        <div class="mdl-layout-spacer"></div>
        <a class="mdl-navigation__link" href="/help"><i class="mdl-color-text--blue-grey-400 material-icons"
            role="presentation">help_outline</i><span class="visuallyhidden">Help</span></a>
      </nav>
    </div>
    <main class="mdl-layout__content mdl-color--grey-100">
      <div class="mdl-grid demo-content">
        <div class="demo-charts mdl-color--white mdl-shadow--2dp mdl-cell mdl-cell--12-col mdl-grid">
          <div class="single-chart">
            <svg viewBox="0 0 36 36" class="circular-chart blue">
              <path class="circle-bg" d="M18 2.0845
                      a 15.9155 15.9155 0 0 1 0 31.831
                      a 15.9155 15.9155 0 0 1 0 -31.831" />
              <path id="path_temp_1" class="circle" stroke-dasharray="0, 100" d="M18 2.0845
                      a 15.9155 15.9155 0 0 1 0 31.831
                      a 15.9155 15.9155 0 0 1 0 -31.831" />
              <text x="18" y="20.35" id="temperature_1" class="percentage">Zone1</text>
              <text x="18" y="25.35" class="zone">Zone1</text>
            </svg>
          </div>
          <div class="single-chart">
            <svg viewBox="0 0 36 36" class="circular-chart green">
              <path class="circle-bg" d="M18 2.0845
                      a 15.9155 15.9155 0 0 1 0 31.831
                      a 15.9155 15.9155 0 0 1 0 -31.831" />
              <path id="path_temp_2" class="circle" stroke-dasharray="0, 100" d="M18 2.0845
                      a 15.9155 15.9155 0 0 1 0 31.831
                      a 15.9155 15.9155 0 0 1 0 -31.831" />
              <text x="18" y="20.35" id="temperature_2" class="percentage">Zone2</text>
              <text x="18" y="25.35" class="zone">Zone2</text>
            </svg>
          </div>
          <div class="single-chart">
            <svg viewBox="0 0 36 36" class="circular-chart yellow">
              <path class="circle-bg" d="M18 2.0845
                      a 15.9155 15.9155 0 0 1 0 31.831
                      a 15.9155 15.9155 0 0 1 0 -31.831" />
              <path id="path_temp_3" class="circle" stroke-dasharray="0, 100" d="M18 2.0845
                      a 15.9155 15.9155 0 0 1 0 31.831
                      a 15.9155 15.9155 0 0 1 0 -31.831" />
              <text x="18" y="20.35" id="temperature_3" class="percentage">Zone3</text>
              <text x="18" y="25.35" class="zone">Zone3</text>
            </svg>
          </div>
          <div class="single-chart">
            <svg viewBox="0 0 36 36" class="circular-chart orange">
              <path class="circle-bg" d="M18 2.0845
                      a 15.9155 15.9155 0 0 1 0 31.831
                      a 15.9155 15.9155 0 0 1 0 -31.831" />
              <path id="path_temp_4" class="circle" stroke-dasharray="0, 100" d="M18 2.0845
                      a 15.9155 15.9155 0 0 1 0 31.831
                      a 15.9155 15.9155 0 0 1 0 -31.831" />
              <text x="18" y="20.35" id="temperature_4" class="percentage">Zone4</text>
              <text x="18" y="25.35" class="zone">Zone4</text>
            </svg>
          </div>
          <!-- <div class="single-chart">
            <svg viewBox="0 0 36 36" class="circular-chart green">
              <path class="circle-bg" d="M18 2.0845
                        a 15.9155 15.9155 0 0 1 0 31.831
                        a 15.9155 15.9155 0 0 1 0 -31.831" />
              <path id='path_humidity' class="circle" stroke-dasharray="0, 100" d="M18 2.0845
                        a 15.9155 15.9155 0 0 1 0 31.831
                        a 15.9155 15.9155 0 0 1 0 -31.831" />
              <text x="18" y="20.35" id="humidity" class="percentage">Loading</text>
            </svg>
          </div>

          <div class="single-chart">
            <svg viewBox="0 0 36 36" class="circular-chart blue">
              <path class="circle-bg" d="M18 2.0845
                        a 15.9155 15.9155 0 0 1 0 31.831
                        a 15.9155 15.9155 0 0 1 0 -31.831" />
              <path id='path_pressure' class="circle" stroke-dasharray="0, 100" d="M18 2.0845
                        a 15.9155 15.9155 0 0 1 0 31.831
                        a 15.9155 15.9155 0 0 1 0 -31.831" />
              <text x="18" y="20.35" id="pressure" class="percentage">Loading</text>
            </svg>
          </div> -->

        </div>
        <div class="demo-charts mdl-color--white mdl-shadow--2dp mdl-cell mdl-cell--12-col mdl-grid">
          <div class="single-chart">
            <svg viewBox="0 0 36 36" class="circular-chart pink">
              <path class="circle-bg" d="M18 2.0845
                      a 15.9155 15.9155 0 0 1 0 31.831
                      a 15.9155 15.9155 0 0 1 0 -31.831" />
              <path id="path_temp_5" class="circle" stroke-dasharray="0, 100" d="M18 2.0845
                      a 15.9155 15.9155 0 0 1 0 31.831
                      a 15.9155 15.9155 0 0 1 0 -31.831" />
              <text x="18" y="20.35" id="temperature_5" class="percentage">Zone5</text>
              <text x="18" y="25.35" class="zone">Zone5</text>
            </svg>
          </div>
          <div class="single-chart">
            <svg viewBox="0 0 36 36" class="circular-chart purple">
              <path class="circle-bg" d="M18 2.0845
                      a 15.9155 15.9155 0 0 1 0 31.831
                      a 15.9155 15.9155 0 0 1 0 -31.831" />
              <path id="path_temp_6" class="circle" stroke-dasharray="0, 100" d="M18 2.0845
                      a 15.9155 15.9155 0 0 1 0 31.831
                      a 15.9155 15.9155 0 0 1 0 -31.831" />
              <text x="18" y="20.35" id="temperature_6" class="percentage">Zone6</text>
              <text x="18" y="25.35" class="zone">Zone6</text>
            </svg>
          </div>
          <div class="single-chart">
            <svg viewBox="0 0 36 36" class="circular-chart brown">
              <path class="circle-bg" d="M18 2.0845
                      a 15.9155 15.9155 0 0 1 0 31.831
                      a 15.9155 15.9155 0 0 1 0 -31.831" />
              <path id="path_temp_7" class="circle" stroke-dasharray="0, 100" d="M18 2.0845
                      a 15.9155 15.9155 0 0 1 0 31.831
                      a 15.9155 15.9155 0 0 1 0 -31.831" />
              <text x="18" y="20.35" id="temperature_7" class="percentage">Zone7</text>
              <text x="18" y="25.35" class="zone">Zone7</text>
            </svg>
          </div>
          <div class="single-chart">
            <svg viewBox="0 0 36 36" class="circular-chart gray">
              <path class="circle-bg" d="M18 2.0845
                      a 15.9155 15.9155 0 0 1 0 31.831
                      a 15.9155 15.9155 0 0 1 0 -31.831" />
              <path id="path_temp_8" class="circle" stroke-dasharray="0, 100" d="M18 2.0845
                      a 15.9155 15.9155 0 0 1 0 31.831
                      a 15.9155 15.9155 0 0 1 0 -31.831" />
              <text x="18" y="20.35" id="temperature_8" class="percentage">Zone8</text>
              <text x="18" y="25.35" class="zone">Zone8</text>
            </svg>
          </div>


        </div>

        <!-- <div class="demo-charts mdl-color--white mdl-shadow--2dp mdl-cell mdl-cell--12-col mdl-grid">
          <div id="container" style="height:100%; width:100%;"></div>
        </div> -->


        <!-- For Camera Streamming  -->
        <div class="demo-charts mdl-color--white mdl-shadow--2dp mdl-cell mdl-cell--12-col mdl-grid">
          <div class="demo-graphs mdl-shadow--2dp mdl-color--white mdl-cell mdl-cell--8-col">
            <div id="container" style="height:400px; width:100%;"></div>
          </div>
          <div class="demo-cards mdl-cell mdl-cell--4-col mdl-cell--9-col-tablet mdl-grid mdl-grid--no-spacing">
            <div
              class="demo-updates mdl-card mdl-shadow--2dp mdl-cell mdl-cell--4-col mdl-cell--4-col-tablet mdl-cell--12-col-desktop">


              <div class="preview">


                <img id="play">

              </div>


            </div>

          </div>
        </div>



    </main>
  </div>


  <script src="https://code.getmdl.io/1.3.0/material.min.js"></script>

  <script>
    var socket = io();
    var data = '<%- JSON.stringify(device) %>';
    var device = JSON.parse(data);

    socket.on(device[0]['socket_id'], function (image) {
      var img = document.getElementById("play");
      img.src = image;
    });
  </script>


</html>